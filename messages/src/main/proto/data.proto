syntax = "proto3";

package oslonokkelen.data;

option java_package = "no.kommune.oslo.oslonokkelen.data";




/* Describes a thing attached to the adapter.
 * This can be doors, z-wave controllers, light bulbs.. */
message ThingDescription {

    /* Something that identifies the thing within the adapter */
    string id = 1;


    /* All the things the action can do */
    repeated ActionDescription actions = 3;

    /* Readable properties */
    repeated ActionDescription properties = 4;

}

/* It will often be interesting to know something about the current
 * state of all the things attached to the adapter. Is the door open right now?
 * How warm is it? How much of the battery is left..?
 * All these things can be described with properties. */
message ThingPropertyDescription {

    /* An id that identifies the property description within the thing */
    string id = 1;

    repeated ActionDescription actions = 2;

}

/*  An action is something a thing can do like unlocking a door or turning on the lights */
message ActionDescription {

    /* Identifies the action within the thing it is attached to */
    string id = 1;

    /* A human readable description of the action */
    string description = 2;

    /* The adapter can require information about the actor / person behind the
     * request to execute an action. Based on this information it can decide to
     * deny the request. */
    repeated RequiredActorProfileParameter requiredActorProfileParameters = 3;

    /* Description of the input parameters for this operation */
    repeated RequiredInputParameter requiredInputParameters = 4;

}

/* Some messages might be parameterized. For example changing the color of a light
 * bulb will probably require the user to choose the color. */
message RequiredInputParameter {

    /* Identifies the parameters, example: color, duration.. */
    string property = 1;

    /* An optional, human readable description of the parameter */
    string description = 2;

}

/* Describes user information in order to execute an action */
message RequiredActorProfileParameter {

    /* The parameter */
    ActorProfileParameter parameter = 1;

    /* A human readable message explaining why this information is */
    string why = 2;

}

/* Profile information the adapter can request.
 * Remember that in a GDPR world you need to justify this each and every one of these.. */
enum ActorProfileParameter {

    NATIONAL_PERSON_ID_NUMBER = 0;

    FULL_NAME = 1;

}





/* Boolean on steroids that also
 * communicates the "don't know" case */
enum State {

    YES = 0;

    NO = 1;

    UNKNOWN = 2;

}






enum Result {

    SUCCESS = 0; // Executed successfully

    ERROR = 1; // Some permanent error, retrying the action will probably not help

    HICCUP = 2; // Some temporary error, retrying might help.

    DENIED = 3; // Access denied

}